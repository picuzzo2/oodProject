@model CSFinder.Models.Student
@{
    ViewData["Title"] = "EditProfile";
    Layout = "_StudentLayout";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />

<style>

    img {
        margin: 20px;
        width: 500px;
    }

    .card-img {
        border-radius: 50%;
        margin: 20px;
        border: 1px solid #ddd;
        padding: 5px;
        width: 150px;
        height: 150px;
    }

    .profile {
        width: 100%;
    }

    input {
        position: relative;
        width: 100%;
    }
    .detail {
        width: 600px;
        padding-right: 50px;
        height:600px;
        margin-bottom: 20px;
        margin-left: 50px;
        background-color: #c8d6e5;
        border-radius: 10px;
        border: 2px solid #4682B4;
        box-shadow: 0px 15px 27px -20px rgba(79, 79, 79, 0.45);
        font-family: 'Kanit', sans-serif;
    }

        .detail:hover {
            box-shadow: 24px 30px 29px -20px rgba(79, 79, 79, 1);
        }


    p {
        margin: 0;
    }

    .column1 {
        float: left;
        width: 25%;
        padding-right: 10px;
        height: 50%;
        background-color: #f1f1f1;
        position: fixed;
        border-radius: 30px;
    }

    .column2 {
        float: left;
        width: 100%;
        padding-left: 40%;
        height: 100%;
    }
</style>

<div class="row">
    <div class="column1" align='center'>

        <img class="card-img" src="@Model.ImgProfile" alt="Avatar" align='center'/><br />
        <p><b>ชื่อ</b> @Model.Name</p>
        <p><b>สถานะ:</b> @Model.Status </p>
    </div>


    <div class="column2">
        <div class="main">
            <div class="col-md-9">
                    <div class="form-group">
                        <div class="col-md-12">
                            <h3>Edit profile Student</h3>
                        </div>
                    </div>
                    <div class="col-75">
                        <div class="detail">
                            <form id="myForm" action="/action_page.php">
                                <div class="row">
                                    <div class="col-50">
                                        <label style=""><b>@Html.LabelFor(model => model.Name)</b></label>
                                        <span style="margin-top: -13px;">
                                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @Value = Model.Name })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </span>
                                    </div>&nbsp;
                                    <div class="col-50">
                                        <label><b>@Html.LabelFor(model => model.Phone)</b></label>
                                        <span style="width: 388px;
">
                                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @Value = Model.Phone })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </span>
                                    </div>
                                </div><br>

                                <div style=" width:430px;">
                                    <label><b>@Html.LabelFor(model => model.Address)</b></label>
                                    <span>
                                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @Value = Model.Address })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </span><br>
                                </div>
                                <div style=" width:430px;">

                                    <label><b>@Html.LabelFor(model => model.Detail)</b></label>
                                    <span>
                                        @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @Value = Model.Detail })
                                    </span><br>
                                </div>
                                <div style=" width:430px;">
                                    <label><b>@Html.LabelFor(model => model.Type)</b></label>
                                    <span>
                                        @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(Types))))
                                    </span><br>
                                </div>

                            </form>

                            <div align="left" class="col-md-12">
                                <p><b>Resume:</b></p>
                                <div class="file-upload">
                                    <input class="file-upload__input" type="file" name="myFile[]" id="myFile" multiple />
                                    <script>
                                        Array.prototype.forEach.call(document.querySelectorAll('.file-upload__boutton'), function (button) {
                                            const hiddenInput = button.parentElement.querySelector('.file-upload__input');
                                            const label = button.parentElement.querySelector('.file-upload__label');
                                            const defaultLabelText = 'No file(s) selected';

                                            label.textContent = defaultLabelText;
                                            label.title = defaultLabelText;

                                            button.addEventListener("click", function () {
                                                hiddenInput.click();
                                            });

                                            hiddenInput.addEventListener("change", function () {
                                                console.log(hiddenInput.files);
                                                const filenameList = Array.prototype.map.call(hiddenInput.files, function (file) {
                                                    return file.name;
                                                });

                                                label.textContent = filenameList.join(',') || defaultLabelText;
                                                label.title = label.textContent;

                                            });
                                    </script>
                                </div>
                            </div>
                            <div align="left" class="col-md-12">
                                <p><b>Transcript:</b></p>
                                <div class="file-upload">
                                    <input class="file-upload__input" type="file" name="myFile[]" id="myFile" multiple />
                                    <script>
                                        Array.prototype.forEach.call(document.querySelectorAll('.file-upload__boutton'), function (button) {
                                            const hiddenInput = button.parentElement.querySelector('.file-upload__input');
                                            const label = button.parentElement.querySelector('.file-upload__label');
                                            const defaultLabelText = 'No file(s) selected';

                                            label.textContent = defaultLabelText;
                                            label.title = defaultLabelText;

                                            button.addEventListener("click", function () {
                                                hiddenInput.click();
                                            });

                                            hiddenInput.addEventListener("change", function () {
                                                console.log(hiddenInput.files);
                                                const filenameList = Array.prototype.map.call(hiddenInput.files, function (file) {
                                                    return file.name;
                                                });

                                                label.textContent = filenameList.join(',') || defaultLabelText;
                                                label.title = label.textContent;

                                            });
                                    </script>
                                </div><br>
                            </div>
                            <a href="Profile" class="btn btn-primary float-right" style="margin-top : 10px;background-color: #CD2E57;">Cancel</a>
                            <a href="#" class="btn btn-primary float-right" style="margin-top : 10px;background-color: #4682B4;" onclick="Save()">Save</a>
                        </div>

                        
                        
                    </div>

                        </div>
                    </div>

                                       
                      


                            
                        </div>
                    </div>

</div>
</div>
<script>
    function Save() {

        var data = $("#myForm").serialize();
        var myFrom = $("#myForm");
        
        if (!myFrom.valid()) {
             return false;
        }
        debugger
        $.ajax({
            type: "Post",
            url: "/Student/EditProfile",
            data: data,
            success: function (response) {
                if (response.success) {
                    alert(response.responseText);
                    window.location.href = "/Student/Profile";
                }
                else if (!response.success) {
                    alert(response.responseText);
                    window.location.href = "/Student/EditProfile";
                }
                debugger
            }
        })
    }
</script>


