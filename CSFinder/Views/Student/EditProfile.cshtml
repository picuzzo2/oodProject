@model CSFinder.Models.StudentAccount
@{
    ViewData["Title"] = "EditProfile";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />

<style>

    img {
        margin: 20px;
        width: 500px;
    }

    .card-img {
        border-radius: 50%;
        margin: 20px;
        border: 1px solid #ddd;
        padding: 5px;
        width: 150px;
        height: 150px;
    }

    .profile {
        width: 100%;
    }

    input {
        position: relative;
        width: 100%;
    }

    p {
        margin: 0;
    }

    .column1 {
        float: left;
        width: 25%;
        padding-right: 10px;
        height: 50%;
        background-color: #f1f1f1;
        position: fixed;
        border-radius: 30px;
    }

    .column2 {
        float: left;
        width: 100%;
        padding-left: 40%;
        height: 100%;
    }
</style>

<div class="row">
    <div class="column1" align='center'>

        <img class="card-img" src="@ViewBag.user.ImgProfile" alt="Avatar" align='center' /><br />
        <p><b>ชื่อ</b> @ViewBag.user.Name</p>
        <p><b>สถานะ:</b> @ViewBag.user.Status </p>
    </div>


    <div class="column2">
        <div class="main">
            <div class="col-md-9">
                <form id="myForm">
                    <div class="form-group">
                        <div class="col-md-12">
                            <h3>Edit profile Student</h3>
                        </div>
                    </div>

                    <div class="form-group" style=" width: 320px; background-color: #f8f8f8; height: 100px; border: 2px solid #ccc; border-radius: 6px;">
                        <div align="left" class="col-md-12">
                            <span>@Html.LabelFor(a => a.Name)</span>
                            <span>
                                @Html.TextBoxFor(a => a.Name, new { @class = "form-control", @placeholder = "Edit Name" })
                                @Html.ValidationMessageFor(a => a.Name, "", new { @class = "text-danger" })
                            </span>
                        </div>
                    </div>
                    <div class="form-group" style=" width: 320px; background-color: #f8f8f8; height: 100px; border: 2px solid #ccc; border-radius: 6px;">
                        <div align="left" class="col-md-12">
                            <span>@Html.LabelFor(a => a.Address)</span>
                            <span>
                                @Html.TextBoxFor(a => a.Address, new { @class = "form-control", @placeholder = "Edit Address" })
                                @Html.ValidationMessageFor(a => a.Address, "", new { @class = "text-danger" })
                            </span>
                        </div>
                    </div>
                    <div class="form-group" style=" width: 320px; background-color: #f8f8f8; height: 100px; border: 2px solid #ccc; border-radius: 6px;">
                        <div align="left" class="col-md-12">
                            <span>@Html.LabelFor(a => a.Phone)</span>
                            <span>
                                @Html.TextBoxFor(a => a.Phone, new { @class = "form-control", @placeholder = "Edit Phone number" })
                                @Html.ValidationMessageFor(a => a.Phone, "", new { @class = "text-danger" })
                            </span>
                        </div>
                    </div>
                    <div class="form-group" style=" width: 320px; background-color: #f8f8f8; height: 100px; border: 2px solid #ccc; border-radius: 6px;">
                        <div align="left" class="col-md-12">
                            <span>@Html.LabelFor(a => a.Email)</span>
                            <span>
                                @Html.TextBoxFor(a => a.Email, new { @class = "form-control", @placeholder = "Edit Email" })
                                @Html.ValidationMessageFor(a => a.Email, "", new { @class = "text-danger" })
                            </span>
                        </div>
                    </div>
                </form>
                <p><b>Resume:</b></p>
                <div class="file-upload">
                    <input class="file-upload__input" type="file" name="myFile[]" id="myFile" multiple />
                    <script>
                        Array.prototype.forEach.call(document.querySelectorAll('.file-upload__boutton'), function (button) {
                            const hiddenInput = button.parentElement.querySelector('.file-upload__input');
                            const label = button.parentElement.querySelector('.file-upload__label');
                            const defaultLabelText = 'No file(s) selected';

                            label.textContent = defaultLabelText;
                            label.title = defaultLabelText;

                            button.addEventListener("click", function () {
                                hiddenInput.click();
                            });

                            hiddenInput.addEventListener("change", function () {
                                console.log(hiddenInput.files);
                                const filenameList = Array.prototype.map.call(hiddenInput.files, function (file) {
                                    return file.name;
                                });

                                label.textContent = filenameList.join(',') || defaultLabelText;
                                label.title = label.textContent;

                            });
                    </script>
                </div><br>

                <p><b>Transcript:</b></p>
                <div class="file-upload">
                    <input class="file-upload__input" type="file" name="myFile[]" id="myFile" multiple />
                    <script>
                        Array.prototype.forEach.call(document.querySelectorAll('.file-upload__boutton'), function (button) {
                            const hiddenInput = button.parentElement.querySelector('.file-upload__input');
                            const label = button.parentElement.querySelector('.file-upload__label');
                            const defaultLabelText = 'No file(s) selected';

                            label.textContent = defaultLabelText;
                            label.title = defaultLabelText;

                            button.addEventListener("click", function () {
                                hiddenInput.click();
                            });

                            hiddenInput.addEventListener("change", function () {
                                console.log(hiddenInput.files);
                                const filenameList = Array.prototype.map.call(hiddenInput.files, function (file) {
                                    return file.name;
                                });

                                label.textContent = filenameList.join(',') || defaultLabelText;
                                label.title = label.textContent;

                            });
                    </script>
                </div>
                <a href="Profile" class="btn btn-primary float-right" style="margin-top : 10px;">Cancle</a>
                <a href="Profile" class="btn btn-primary float-right" style="margin-top : 10px;" onclick="Save()">Save</a>&nbsp;
            </div>
        </div>
        
    </div>
    </div>
<script>
    var Save = function () {
        debugger
        var data = $("#myForm").serialize();
        if (!$("#myForm").valid()) {

            return false;
        }

        $.ajax({
            type: "Post",
            url: "/Student/EditProfile",
            data: data,
            success: function (response) {

                if (response == "fail") {
                    window.location.href = "/Student/EditProfile";
                }
                else if (response.success) {
                    alert(response.responseText);
                    window.location.href = "/Student/Profile";
                }
                else if (!response.success) {
                    alert(response.responseText);
                    window.location.href = "/Student/EditProfile";
                }
                debugger
            }
        })
    }
</script>


